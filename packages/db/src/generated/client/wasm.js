
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  clerk_id: 'clerk_id',
  email: 'email',
  name: 'name',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  phone_number: 'phone_number',
  role: 'role',
  language: 'language',
  is_active: 'is_active'
};

exports.Prisma.CredentialScalarFieldEnum = {
  id: 'id',
  name: 'name',
  type: 'type',
  provider: 'provider',
  secret: 'secret',
  config: 'config',
  expiresIn: 'expiresIn',
  userId: 'userId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.WorkflowScalarFieldEnum = {
  id: 'id',
  name: 'name',
  templateId: 'templateId',
  description: 'description',
  available: 'available',
  status: 'status',
  canBeScheduled: 'canBeScheduled',
  idempotencyKey: 'idempotencyKey',
  cronExpressions: 'cronExpressions',
  timezone: 'timezone',
  lastRunAt: 'lastRunAt',
  nextRunAt: 'nextRunAt',
  fields: 'fields',
  input: 'input',
  eventName: 'eventName',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  userId: 'userId',
  requiredProviders: 'requiredProviders',
  requiredScopes: 'requiredScopes',
  version: 'version',
  config: 'config'
};

exports.Prisma.WorkflowCredentialScalarFieldEnum = {
  workflowId: 'workflowId',
  credentialId: 'credentialId'
};

exports.Prisma.WorkflowRunScalarFieldEnum = {
  id: 'id',
  inngestRunId: 'inngestRunId',
  idempotencyKey: 'idempotencyKey',
  status: 'status',
  startedAt: 'startedAt',
  completedAt: 'completedAt',
  input: 'input',
  output: 'output',
  error: 'error',
  realtimeData: 'realtimeData',
  version: 'version',
  workflowId: 'workflowId',
  userId: 'userId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.WorkflowTemplateScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  eventName: 'eventName',
  canBeScheduled: 'canBeScheduled',
  requiredProviders: 'requiredProviders',
  requiredScopes: 'requiredScopes',
  fields: 'fields',
  restrictedToUsers: 'restrictedToUsers',
  tags: 'tags',
  version: 'version'
};

exports.Prisma.ClientBrandingScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  companyName: 'companyName',
  logoUrl: 'logoUrl',
  primaryColor: 'primaryColor',
  secondaryColor: 'secondaryColor',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ServiceRequestScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  title: 'title',
  description: 'description',
  businessProcess: 'businessProcess',
  desiredOutcome: 'desiredOutcome',
  priority: 'priority',
  status: 'status',
  meetingScheduled: 'meetingScheduled',
  meetingUrl: 'meetingUrl',
  meetingDate: 'meetingDate',
  proposalSent: 'proposalSent',
  proposalAccepted: 'proposalAccepted',
  estimatedHours: 'estimatedHours',
  quotedPrice: 'quotedPrice',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AutomationMetricsScalarFieldEnum = {
  id: 'id',
  workflowId: 'workflowId',
  date: 'date',
  runsCount: 'runsCount',
  successCount: 'successCount',
  failureCount: 'failureCount',
  avgDuration: 'avgDuration',
  timeSavedMinutes: 'timeSavedMinutes',
  errorsPrevented: 'errorsPrevented',
  costSavings: 'costSavings',
  createdAt: 'createdAt'
};

exports.Prisma.BusinessOutcomeScalarFieldEnum = {
  id: 'id',
  workflowId: 'workflowId',
  outcomeType: 'outcomeType',
  value: 'value',
  timestamp: 'timestamp',
  metadata: 'metadata',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.EfficiencyMetricScalarFieldEnum = {
  id: 'id',
  workflowId: 'workflowId',
  period: 'period',
  beforeTimeSpent: 'beforeTimeSpent',
  beforeErrorRate: 'beforeErrorRate',
  beforeThroughput: 'beforeThroughput',
  afterTimeSpent: 'afterTimeSpent',
  afterErrorRate: 'afterErrorRate',
  afterThroughput: 'afterThroughput',
  timeReduction: 'timeReduction',
  errorReduction: 'errorReduction',
  throughputIncrease: 'throughputIncrease',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AutomationOpportunityScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  title: 'title',
  description: 'description',
  category: 'category',
  impactScore: 'impactScore',
  difficultyScore: 'difficultyScore',
  timeSavingsHours: 'timeSavingsHours',
  costSavings: 'costSavings',
  paybackPeriodMonths: 'paybackPeriodMonths',
  requiredIntegrations: 'requiredIntegrations',
  status: 'status',
  identifiedAt: 'identifiedAt',
  dismissalReason: 'dismissalReason',
  implementationNotes: 'implementationNotes',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.WorkflowHealthScalarFieldEnum = {
  id: 'id',
  workflowId: 'workflowId',
  healthScore: 'healthScore',
  lastCalculated: 'lastCalculated',
  successRate: 'successRate',
  performanceTrend: 'performanceTrend',
  errorPattern: 'errorPattern',
  businessImpact: 'businessImpact',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.HealthRecommendationScalarFieldEnum = {
  id: 'id',
  workflowHealthId: 'workflowHealthId',
  type: 'type',
  priority: 'priority',
  title: 'title',
  description: 'description',
  estimatedImpact: 'estimatedImpact',
  implementationEffort: 'implementationEffort',
  isImplemented: 'isImplemented',
  implementedAt: 'implementedAt',
  effectivenessScore: 'effectivenessScore',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.HealthAlertScalarFieldEnum = {
  id: 'id',
  workflowHealthId: 'workflowHealthId',
  alertType: 'alertType',
  severity: 'severity',
  message: 'message',
  threshold: 'threshold',
  currentValue: 'currentValue',
  isAcknowledged: 'isAcknowledged',
  acknowledgedAt: 'acknowledgedAt',
  acknowledgedBy: 'acknowledgedBy',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ExecutiveReportScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  title: 'title',
  periodStart: 'periodStart',
  periodEnd: 'periodEnd',
  format: 'format',
  sections: 'sections',
  companyName: 'companyName',
  logoUrl: 'logoUrl',
  primaryColor: 'primaryColor',
  shareableLink: 'shareableLink',
  linkExpiresAt: 'linkExpiresAt',
  isPublic: 'isPublic',
  generatedAt: 'generatedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};
exports.CredentialType = exports.$Enums.CredentialType = {
  OAUTH: 'OAUTH',
  API_KEY: 'API_KEY'
};

exports.Provider = exports.$Enums.Provider = {
  GOOGLE: 'GOOGLE',
  SLACK: 'SLACK',
  HUBSPOT: 'HUBSPOT',
  FIRECRAWL: 'FIRECRAWL',
  INSTAGRAM: 'INSTAGRAM',
  CUSTOM: 'CUSTOM'
};

exports.WorkflowStatus = exports.$Enums.WorkflowStatus = {
  IDLE: 'IDLE',
  RUNNING: 'RUNNING',
  COMPLETED: 'COMPLETED',
  FAILED: 'FAILED',
  CANCELLED: 'CANCELLED'
};

exports.RunStatus = exports.$Enums.RunStatus = {
  STARTED: 'STARTED',
  RUNNING: 'RUNNING',
  COMPLETED: 'COMPLETED',
  FAILED: 'FAILED',
  CANCELLED: 'CANCELLED'
};

exports.RequestPriority = exports.$Enums.RequestPriority = {
  LOW: 'LOW',
  MEDIUM: 'MEDIUM',
  HIGH: 'HIGH',
  URGENT: 'URGENT'
};

exports.RequestStatus = exports.$Enums.RequestStatus = {
  SUBMITTED: 'SUBMITTED',
  REVIEWED: 'REVIEWED',
  MEETING_SCHEDULED: 'MEETING_SCHEDULED',
  PROPOSAL_SENT: 'PROPOSAL_SENT',
  APPROVED: 'APPROVED',
  IN_PROGRESS: 'IN_PROGRESS',
  COMPLETED: 'COMPLETED',
  CANCELLED: 'CANCELLED'
};

exports.BusinessOutcomeType = exports.$Enums.BusinessOutcomeType = {
  LEADS_GENERATED: 'LEADS_GENERATED',
  ORDERS_PROCESSED: 'ORDERS_PROCESSED',
  TICKETS_RESOLVED: 'TICKETS_RESOLVED',
  CUSTOM: 'CUSTOM'
};

exports.OpportunityCategory = exports.$Enums.OpportunityCategory = {
  DATA_ENTRY: 'DATA_ENTRY',
  COMMUNICATION: 'COMMUNICATION',
  REPORTING: 'REPORTING',
  INTEGRATION: 'INTEGRATION'
};

exports.OpportunityStatus = exports.$Enums.OpportunityStatus = {
  IDENTIFIED: 'IDENTIFIED',
  DISMISSED: 'DISMISSED',
  REQUESTED: 'REQUESTED',
  IMPLEMENTED: 'IMPLEMENTED'
};

exports.HealthRecommendationType = exports.$Enums.HealthRecommendationType = {
  PERFORMANCE: 'PERFORMANCE',
  RELIABILITY: 'RELIABILITY',
  OPTIMIZATION: 'OPTIMIZATION'
};

exports.HealthRecommendationPriority = exports.$Enums.HealthRecommendationPriority = {
  LOW: 'LOW',
  MEDIUM: 'MEDIUM',
  HIGH: 'HIGH'
};

exports.ImplementationEffort = exports.$Enums.ImplementationEffort = {
  LOW: 'LOW',
  MEDIUM: 'MEDIUM',
  HIGH: 'HIGH'
};

exports.Prisma.ModelName = {
  User: 'User',
  Credential: 'Credential',
  Workflow: 'Workflow',
  WorkflowCredential: 'WorkflowCredential',
  WorkflowRun: 'WorkflowRun',
  WorkflowTemplate: 'WorkflowTemplate',
  ClientBranding: 'ClientBranding',
  ServiceRequest: 'ServiceRequest',
  AutomationMetrics: 'AutomationMetrics',
  BusinessOutcome: 'BusinessOutcome',
  EfficiencyMetric: 'EfficiencyMetric',
  AutomationOpportunity: 'AutomationOpportunity',
  WorkflowHealth: 'WorkflowHealth',
  HealthRecommendation: 'HealthRecommendation',
  HealthAlert: 'HealthAlert',
  ExecutiveReport: 'ExecutiveReport'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/home/abdssamie/Projects/duramation/packages/db/src/generated/client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "debian-openssl-3.0.x",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/home/abdssamie/Projects/duramation/packages/db/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../..",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n  output   = \"src/generated/client\"\n}\n\ndatasource db {\n  provider  = \"postgresql\"\n  url       = env(\"DATABASE_URL\") // uses connection pooling\n  directUrl = env(\"DATABASE_URL\") // uses a direct connection\n}\n\n// --- Models ---\n// Maps to the 'users' table\nmodel User {\n  id       String @id @default(cuid())\n  clerk_id String @unique\n  email    String @unique\n\n  // Other user fields can go here, like name, password, etc.\n  name String? @unique\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @default(now()) @updatedAt\n\n  phone_number String? @unique /// @encrypted\n\n  role String @default(\"user\")\n\n  // The user's preferred language, e.g., 'en', 'es', 'fr',\n  language String @default(\"en\")\n\n  is_active Boolean @default(true)\n\n  // A list of all workflows belonging to this user.\n  workflows Workflow[]\n\n  // A list of all credentials belonging to this user.\n  credentials Credential[]\n\n  // Workflow run history\n  workflowRuns WorkflowRun[]\n\n  // Client branding configuration\n  clientBranding ClientBranding?\n\n  // Service requests from this user\n  serviceRequests ServiceRequest[]\n\n  // Enhanced dashboard relations\n  automationOpportunities AutomationOpportunity[]\n  executiveReports        ExecutiveReport[]\n\n  @@map(\"users\")\n}\n\nenum CredentialType {\n  OAUTH\n  API_KEY\n  // Add more general types here if needed\n}\n\nenum Provider {\n  GOOGLE\n  SLACK\n  HUBSPOT\n  FIRECRAWL\n  INSTAGRAM\n  CUSTOM\n}\n\nenum WorkflowStatus {\n  IDLE\n  RUNNING\n  COMPLETED\n  FAILED\n  CANCELLED\n}\n\nenum RunStatus {\n  STARTED\n  RUNNING\n  COMPLETED\n  FAILED\n  CANCELLED\n}\n\nmodel Credential {\n  id       String         @id @default(cuid())\n  name     String // e.g., \"Lab API Key\" or \"CRM Access\"\n  type     CredentialType\n  provider Provider\n\n  secret    String? /// @encrypted - Stored as encrypted JSON string\n  config    Json? // optional extra data (endpoint, token expiry)\n  expiresIn DateTime?\n\n  userId String\n  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @default(now()) @updatedAt\n\n  // This is the new field to reference the join table.\n  workflowCredentials WorkflowCredential[]\n\n  @@unique([userId, name])\n  @@index([userId])\n  @@map(\"credentials\")\n}\n\n// A workflow represents a user's entire configuration.\nmodel Workflow {\n  id   String @id @default(cuid())\n  // The name of the workflow, must match the inngest function id\n  name String\n\n  templateId String\n\n  // A short description of the workflow.\n  description String?\n\n  // Whether the workflow instance is available for use by the user\n  available Boolean @default(true)\n\n  // Current status of the workflow\n  status WorkflowStatus @default(IDLE)\n\n  canBeScheduled Boolean @default(false)\n\n  idempotencyKey String? @default(cuid())\n\n  cronExpressions String[]  @default([]) // Multiple schedules  e.g., [\"0 9 * * *\", \"0 12 * * *\"]\n  timezone        String?   @default(\"UTC\") // e.g., \"America/New_York\"\n  lastRunAt       DateTime?\n  nextRunAt       DateTime?\n\n  fields Json?\n  input  Json?\n\n  // The name of the event or the cron value for the schedule eg. \"TZ=Europe/Paris 0 12 * * 5\"\n  eventName String\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @default(now()) @updatedAt\n\n  // The foreign key linking this workflow to a specific user.\n  userId String\n  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  requiredProviders Provider[] @default([])\n  requiredScopes    Json? // Stores scopes per provider as Record<Provider, string[]>\n\n  version String? // Version of the workflow template used\n\n  config Json?\n\n  // This is the new field to reference the join table.\n  workflowCredentials WorkflowCredential[]\n\n  // Workflow run history\n  workflowRuns WorkflowRun[]\n\n  // Automation metrics for this workflow\n  automationMetrics AutomationMetrics[]\n\n  // Enhanced dashboard relations\n  businessOutcomes  BusinessOutcome[]\n  efficiencyMetrics EfficiencyMetric[]\n  workflowHealth    WorkflowHealth?\n\n  @@index([userId])\n  @@map(\"workflows\")\n}\n\n// This model acts as a join table for the many-to-many relationship\n// between Workflow and Credential.\nmodel WorkflowCredential {\n  // Composite ID to uniquely identify the relationship\n  workflowId   String\n  credentialId String\n\n  // Foreign keys linking to the Workflow and Credential models\n  workflow   Workflow   @relation(fields: [workflowId], references: [id], onDelete: Cascade)\n  credential Credential @relation(fields: [credentialId], references: [id], onDelete: Cascade)\n\n  @@id([workflowId, credentialId])\n  @@map(\"workflow_credentials\")\n}\n\n// Stores individual workflow run instances and their realtime data\nmodel WorkflowRun {\n  id String @id @default(cuid())\n\n  // Inngest run ID for correlation\n  inngestRunId String @unique\n\n  idempotencyKey String? @unique\n\n  // Status of this specific run\n  status RunStatus @default(STARTED)\n\n  // Timestamps\n  startedAt   DateTime  @default(now())\n  completedAt DateTime?\n\n  // Run metadata\n  input  Json? // Input parameters for this run\n  output Json? // Final output/result\n  error  String? // Error message if failed\n\n  // Realtime data storage\n  realtimeData Json[] @default([]) // Array of realtime messages/updates\n\n  version String? // Version of the workflow template used\n\n  // Foreign key to workflow\n  workflowId String\n  workflow   Workflow @relation(fields: [workflowId], references: [id], onDelete: Cascade)\n\n  // Foreign key to user (denormalized for easier queries)\n  userId String\n  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @default(now()) @updatedAt\n\n  @@index([workflowId])\n  @@index([userId])\n  @@index([inngestRunId])\n  @@index([status])\n  @@map(\"workflow_runs\")\n}\n\nmodel WorkflowTemplate {\n  id                String     @id\n  name              String\n  description       String\n  eventName         String     @unique\n  canBeScheduled    Boolean\n  requiredProviders Provider[] @default([])\n  requiredScopes    Json?\n  fields            Json?\n  restrictedToUsers String[]\n  tags              String[]\n  version           String\n\n  @@map(\"workflow_templates\")\n}\n\n// Client branding configuration for white-labeled dashboard\nmodel ClientBranding {\n  id     String @id @default(cuid())\n  userId String @unique\n  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  companyName    String\n  logoUrl        String?\n  primaryColor   String?\n  secondaryColor String?\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@map(\"client_branding\")\n}\n\nenum RequestPriority {\n  LOW\n  MEDIUM\n  HIGH\n  URGENT\n}\n\nenum RequestStatus {\n  SUBMITTED\n  REVIEWED\n  MEETING_SCHEDULED\n  PROPOSAL_SENT\n  APPROVED\n  IN_PROGRESS\n  COMPLETED\n  CANCELLED\n}\n\n// Service request tracking for new automation requests\nmodel ServiceRequest {\n  id     String @id @default(cuid())\n  userId String\n  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  title           String\n  description     String\n  businessProcess String // Current manual process\n  desiredOutcome  String // What they want to achieve\n  priority        RequestPriority @default(MEDIUM)\n  status          RequestStatus   @default(SUBMITTED)\n\n  // Meeting scheduling\n  meetingScheduled Boolean   @default(false)\n  meetingUrl       String?\n  meetingDate      DateTime?\n\n  // Proposal tracking\n  proposalSent     Boolean  @default(false)\n  proposalAccepted Boolean?\n  estimatedHours   Int?\n  quotedPrice      Decimal?\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@index([userId])\n  @@index([status])\n  @@map(\"service_requests\")\n}\n\n// Performance metrics storage for ROI calculations\nmodel AutomationMetrics {\n  id         String   @id @default(cuid())\n  workflowId String\n  workflow   Workflow @relation(fields: [workflowId], references: [id], onDelete: Cascade)\n\n  date         DateTime @db.Date\n  runsCount    Int      @default(0)\n  successCount Int      @default(0)\n  failureCount Int      @default(0)\n  avgDuration  Int? // milliseconds\n\n  // ROI metrics\n  timeSavedMinutes Int? // estimated time saved\n  errorsPrevented  Int? // estimated errors prevented\n  costSavings      Decimal? // calculated cost savings\n\n  createdAt DateTime @default(now())\n\n  @@unique([workflowId, date])\n  @@index([workflowId])\n  @@index([date])\n  @@map(\"automation_metrics\")\n}\n\nenum BusinessOutcomeType {\n  LEADS_GENERATED\n  ORDERS_PROCESSED\n  TICKETS_RESOLVED\n  CUSTOM\n}\n\nenum OpportunityCategory {\n  DATA_ENTRY\n  COMMUNICATION\n  REPORTING\n  INTEGRATION\n}\n\nenum OpportunityStatus {\n  IDENTIFIED\n  DISMISSED\n  REQUESTED\n  IMPLEMENTED\n}\n\nenum HealthRecommendationType {\n  PERFORMANCE\n  RELIABILITY\n  OPTIMIZATION\n}\n\nenum HealthRecommendationPriority {\n  LOW\n  MEDIUM\n  HIGH\n}\n\nenum ImplementationEffort {\n  LOW\n  MEDIUM\n  HIGH\n}\n\n// Business outcome tracking for workflows\nmodel BusinessOutcome {\n  id          String              @id @default(cuid())\n  workflowId  String\n  workflow    Workflow            @relation(fields: [workflowId], references: [id], onDelete: Cascade)\n  outcomeType BusinessOutcomeType\n  value       Float\n  timestamp   DateTime            @default(now())\n  metadata    Json?\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@index([workflowId])\n  @@index([timestamp])\n  @@index([outcomeType])\n  @@map(\"business_outcomes\")\n}\n\n// Efficiency metrics comparing before/after automation\nmodel EfficiencyMetric {\n  id         String   @id @default(cuid())\n  workflowId String\n  workflow   Workflow @relation(fields: [workflowId], references: [id], onDelete: Cascade)\n  period     String // e.g., \"2024-Q1\", \"2024-01\"\n\n  // Before automation metrics\n  beforeTimeSpent  Float? // hours\n  beforeErrorRate  Float? // percentage\n  beforeThroughput Float? // items per hour\n\n  // After automation metrics\n  afterTimeSpent  Float? // hours\n  afterErrorRate  Float? // percentage\n  afterThroughput Float? // items per hour\n\n  // Calculated improvements\n  timeReduction      Float? // percentage\n  errorReduction     Float? // percentage\n  throughputIncrease Float? // percentage\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@unique([workflowId, period])\n  @@index([workflowId])\n  @@index([period])\n  @@map(\"efficiency_metrics\")\n}\n\n// Automation opportunity identification and tracking\nmodel AutomationOpportunity {\n  id              String              @id @default(cuid())\n  userId          String\n  user            User                @relation(fields: [userId], references: [id], onDelete: Cascade)\n  title           String\n  description     String\n  category        OpportunityCategory\n  impactScore     Int // 1-10\n  difficultyScore Int // 1-10\n\n  // ROI estimates\n  timeSavingsHours    Float?\n  costSavings         Decimal?\n  paybackPeriodMonths Int?\n\n  requiredIntegrations String[]          @default([])\n  status               OpportunityStatus @default(IDENTIFIED)\n  identifiedAt         DateTime          @default(now())\n\n  // Learning and feedback\n  dismissalReason     String?\n  implementationNotes String?\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@index([userId])\n  @@index([status])\n  @@index([impactScore])\n  @@index([identifiedAt])\n  @@map(\"automation_opportunities\")\n}\n\n// Workflow health scoring and monitoring\nmodel WorkflowHealth {\n  id             String   @id @default(cuid())\n  workflowId     String   @unique\n  workflow       Workflow @relation(fields: [workflowId], references: [id], onDelete: Cascade)\n  healthScore    Int // 0-100\n  lastCalculated DateTime @default(now())\n\n  // Health factors\n  successRate      Float?\n  performanceTrend Float?\n  errorPattern     Float?\n  businessImpact   Float?\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  // Related recommendations and alerts\n  recommendations HealthRecommendation[]\n  alerts          HealthAlert[]\n\n  @@index([workflowId])\n  @@index([healthScore])\n  @@index([lastCalculated])\n  @@map(\"workflow_health\")\n}\n\n// Health improvement recommendations\nmodel HealthRecommendation {\n  id                   String                       @id @default(cuid())\n  workflowHealthId     String\n  workflowHealth       WorkflowHealth               @relation(fields: [workflowHealthId], references: [id], onDelete: Cascade)\n  type                 HealthRecommendationType\n  priority             HealthRecommendationPriority\n  title                String\n  description          String\n  estimatedImpact      String\n  implementationEffort ImplementationEffort\n\n  // Tracking\n  isImplemented      Boolean   @default(false)\n  implementedAt      DateTime?\n  effectivenessScore Int? // 1-10, measured after implementation\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@index([workflowHealthId])\n  @@index([priority])\n  @@index([isImplemented])\n  @@map(\"health_recommendations\")\n}\n\n// Health alerts for declining performance\nmodel HealthAlert {\n  id               String         @id @default(cuid())\n  workflowHealthId String\n  workflowHealth   WorkflowHealth @relation(fields: [workflowHealthId], references: [id], onDelete: Cascade)\n  alertType        String // e.g., \"performance_decline\", \"error_spike\"\n  severity         String // \"low\", \"medium\", \"high\", \"critical\"\n  message          String\n  threshold        Float? // The threshold that triggered this alert\n  currentValue     Float? // The current value that exceeded the threshold\n\n  isAcknowledged Boolean   @default(false)\n  acknowledgedAt DateTime?\n  acknowledgedBy String? // User ID who acknowledged\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@index([workflowHealthId])\n  @@index([severity])\n  @@index([isAcknowledged])\n  @@index([createdAt])\n  @@map(\"health_alerts\")\n}\n\n// Executive report generation and sharing\nmodel ExecutiveReport {\n  id          String   @id @default(cuid())\n  userId      String\n  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n  title       String\n  periodStart DateTime\n  periodEnd   DateTime\n  format      String // \"pdf\", \"pptx\", \"web\"\n\n  // Report content\n  sections Json // Array of report sections\n\n  // Branding\n  companyName  String?\n  logoUrl      String?\n  primaryColor String?\n\n  // Sharing\n  shareableLink String?\n  linkExpiresAt DateTime?\n  isPublic      Boolean   @default(false)\n\n  generatedAt DateTime @default(now())\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n\n  @@index([userId])\n  @@index([generatedAt])\n  @@index([shareableLink])\n  @@map(\"executive_reports\")\n}\n",
  "inlineSchemaHash": "8fed5aefa427632bdd2508846ccd7704942aa716a467f8257e3119e0ffd0186b",
  "copyEngine": false
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"clerk_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"phone_number\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"language\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"is_active\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"workflows\",\"kind\":\"object\",\"type\":\"Workflow\",\"relationName\":\"UserToWorkflow\"},{\"name\":\"credentials\",\"kind\":\"object\",\"type\":\"Credential\",\"relationName\":\"CredentialToUser\"},{\"name\":\"workflowRuns\",\"kind\":\"object\",\"type\":\"WorkflowRun\",\"relationName\":\"UserToWorkflowRun\"},{\"name\":\"clientBranding\",\"kind\":\"object\",\"type\":\"ClientBranding\",\"relationName\":\"ClientBrandingToUser\"},{\"name\":\"serviceRequests\",\"kind\":\"object\",\"type\":\"ServiceRequest\",\"relationName\":\"ServiceRequestToUser\"},{\"name\":\"automationOpportunities\",\"kind\":\"object\",\"type\":\"AutomationOpportunity\",\"relationName\":\"AutomationOpportunityToUser\"},{\"name\":\"executiveReports\",\"kind\":\"object\",\"type\":\"ExecutiveReport\",\"relationName\":\"ExecutiveReportToUser\"}],\"dbName\":\"users\"},\"Credential\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"CredentialType\"},{\"name\":\"provider\",\"kind\":\"enum\",\"type\":\"Provider\"},{\"name\":\"secret\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"config\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"expiresIn\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CredentialToUser\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"workflowCredentials\",\"kind\":\"object\",\"type\":\"WorkflowCredential\",\"relationName\":\"CredentialToWorkflowCredential\"}],\"dbName\":\"credentials\"},\"Workflow\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"templateId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"available\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"WorkflowStatus\"},{\"name\":\"canBeScheduled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"idempotencyKey\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cronExpressions\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"timezone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastRunAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"nextRunAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"fields\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"input\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"eventName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToWorkflow\"},{\"name\":\"requiredProviders\",\"kind\":\"enum\",\"type\":\"Provider\"},{\"name\":\"requiredScopes\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"version\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"config\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"workflowCredentials\",\"kind\":\"object\",\"type\":\"WorkflowCredential\",\"relationName\":\"WorkflowToWorkflowCredential\"},{\"name\":\"workflowRuns\",\"kind\":\"object\",\"type\":\"WorkflowRun\",\"relationName\":\"WorkflowToWorkflowRun\"},{\"name\":\"automationMetrics\",\"kind\":\"object\",\"type\":\"AutomationMetrics\",\"relationName\":\"AutomationMetricsToWorkflow\"},{\"name\":\"businessOutcomes\",\"kind\":\"object\",\"type\":\"BusinessOutcome\",\"relationName\":\"BusinessOutcomeToWorkflow\"},{\"name\":\"efficiencyMetrics\",\"kind\":\"object\",\"type\":\"EfficiencyMetric\",\"relationName\":\"EfficiencyMetricToWorkflow\"},{\"name\":\"workflowHealth\",\"kind\":\"object\",\"type\":\"WorkflowHealth\",\"relationName\":\"WorkflowToWorkflowHealth\"}],\"dbName\":\"workflows\"},\"WorkflowCredential\":{\"fields\":[{\"name\":\"workflowId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"credentialId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"workflow\",\"kind\":\"object\",\"type\":\"Workflow\",\"relationName\":\"WorkflowToWorkflowCredential\"},{\"name\":\"credential\",\"kind\":\"object\",\"type\":\"Credential\",\"relationName\":\"CredentialToWorkflowCredential\"}],\"dbName\":\"workflow_credentials\"},\"WorkflowRun\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"inngestRunId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"idempotencyKey\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"RunStatus\"},{\"name\":\"startedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"completedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"input\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"output\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"error\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"realtimeData\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"version\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"workflowId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"workflow\",\"kind\":\"object\",\"type\":\"Workflow\",\"relationName\":\"WorkflowToWorkflowRun\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToWorkflowRun\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"workflow_runs\"},\"WorkflowTemplate\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"eventName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"canBeScheduled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"requiredProviders\",\"kind\":\"enum\",\"type\":\"Provider\"},{\"name\":\"requiredScopes\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"fields\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"restrictedToUsers\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tags\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"version\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":\"workflow_templates\"},\"ClientBranding\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ClientBrandingToUser\"},{\"name\":\"companyName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"logoUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"primaryColor\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"secondaryColor\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"client_branding\"},\"ServiceRequest\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ServiceRequestToUser\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"businessProcess\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"desiredOutcome\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"priority\",\"kind\":\"enum\",\"type\":\"RequestPriority\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"RequestStatus\"},{\"name\":\"meetingScheduled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"meetingUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"meetingDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"proposalSent\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"proposalAccepted\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"estimatedHours\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"quotedPrice\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"service_requests\"},\"AutomationMetrics\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"workflowId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"workflow\",\"kind\":\"object\",\"type\":\"Workflow\",\"relationName\":\"AutomationMetricsToWorkflow\"},{\"name\":\"date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"runsCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"successCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"failureCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"avgDuration\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"timeSavedMinutes\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"errorsPrevented\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"costSavings\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"automation_metrics\"},\"BusinessOutcome\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"workflowId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"workflow\",\"kind\":\"object\",\"type\":\"Workflow\",\"relationName\":\"BusinessOutcomeToWorkflow\"},{\"name\":\"outcomeType\",\"kind\":\"enum\",\"type\":\"BusinessOutcomeType\"},{\"name\":\"value\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"timestamp\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"business_outcomes\"},\"EfficiencyMetric\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"workflowId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"workflow\",\"kind\":\"object\",\"type\":\"Workflow\",\"relationName\":\"EfficiencyMetricToWorkflow\"},{\"name\":\"period\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"beforeTimeSpent\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"beforeErrorRate\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"beforeThroughput\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"afterTimeSpent\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"afterErrorRate\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"afterThroughput\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"timeReduction\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"errorReduction\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"throughputIncrease\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"efficiency_metrics\"},\"AutomationOpportunity\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AutomationOpportunityToUser\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"enum\",\"type\":\"OpportunityCategory\"},{\"name\":\"impactScore\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"difficultyScore\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"timeSavingsHours\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"costSavings\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"paybackPeriodMonths\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"requiredIntegrations\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"OpportunityStatus\"},{\"name\":\"identifiedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"dismissalReason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"implementationNotes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"automation_opportunities\"},\"WorkflowHealth\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"workflowId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"workflow\",\"kind\":\"object\",\"type\":\"Workflow\",\"relationName\":\"WorkflowToWorkflowHealth\"},{\"name\":\"healthScore\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"lastCalculated\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"successRate\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"performanceTrend\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"errorPattern\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"businessImpact\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"recommendations\",\"kind\":\"object\",\"type\":\"HealthRecommendation\",\"relationName\":\"HealthRecommendationToWorkflowHealth\"},{\"name\":\"alerts\",\"kind\":\"object\",\"type\":\"HealthAlert\",\"relationName\":\"HealthAlertToWorkflowHealth\"}],\"dbName\":\"workflow_health\"},\"HealthRecommendation\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"workflowHealthId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"workflowHealth\",\"kind\":\"object\",\"type\":\"WorkflowHealth\",\"relationName\":\"HealthRecommendationToWorkflowHealth\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"HealthRecommendationType\"},{\"name\":\"priority\",\"kind\":\"enum\",\"type\":\"HealthRecommendationPriority\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"estimatedImpact\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"implementationEffort\",\"kind\":\"enum\",\"type\":\"ImplementationEffort\"},{\"name\":\"isImplemented\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"implementedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"effectivenessScore\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"health_recommendations\"},\"HealthAlert\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"workflowHealthId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"workflowHealth\",\"kind\":\"object\",\"type\":\"WorkflowHealth\",\"relationName\":\"HealthAlertToWorkflowHealth\"},{\"name\":\"alertType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"severity\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"message\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"threshold\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"currentValue\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"isAcknowledged\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"acknowledgedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"acknowledgedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"health_alerts\"},\"ExecutiveReport\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ExecutiveReportToUser\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"periodStart\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"periodEnd\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"format\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sections\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"companyName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"logoUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"primaryColor\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"shareableLink\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"linkExpiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"isPublic\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"generatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"executive_reports\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = undefined
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

